# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2023-04-09T12:41:54+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional, Union

from pydantic import BaseModel, Field, constr


class ContextType(BaseModel):
    name: Optional[str] = None


class DataType(BaseModel):
    name: Optional[str] = None


class RelationshipCreateUpdateInput(BaseModel):
    id: int
    name: str
    homepage: constr(
        regex=r'(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|(?!(.*www\.){1})[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})|'
    )
    description: Optional[str] = None
    contextTypes: Optional[List[ContextType]] = None
    dataTypes: Optional[List[DataType]] = None
    businessOwnerEmail: str


class Status(Enum):
    NOT_ASSESSED = 'NOT_ASSESSED'
    STARTED = 'STARTED'
    REVIEW_STARTED = 'REVIEW_STARTED'
    COMPLETED = 'COMPLETED'
    CANCELLED = 'CANCELLED'
    COLLECTING_INFORMATION = 'COLLECTING_INFORMATION'


class AssessmentStatusHistory(BaseModel):
    date: Optional[datetime] = None
    status: Optional[Status] = None


class PrimaryContact(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    email: Optional[str] = None


class RecertificationType(Enum):
    MANUAL = 'MANUAL'
    AUTOMATIC = 'AUTOMATIC'
    NONE = 'NONE'


class ResidualRisk(Enum):
    NO_ACCESS = 'NO_ACCESS'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    EXTREME = 'EXTREME'


class PotentialRisk(Enum):
    NO_ACCESS = 'NO_ACCESS'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    EXTREME = 'EXTREME'


class Status2(Enum):
    DELETED = 'DELETED'
    NOT_ONBOARDED = 'NOT_ONBOARDED'
    ONBOARDED = 'ONBOARDED'


class VisoUser(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    email: Optional[str] = None


class Assessment(BaseModel):
    expirationDate: Optional[datetime] = None
    statusHistories: Optional[List[AssessmentStatusHistory]] = Field(
        None, unique_items=True
    )
    completedDate: Optional[datetime] = None
    updatedDate: Optional[datetime] = None
    phaseDate: Optional[datetime] = None
    sentToEmail: Optional[str] = None
    createdDate: Optional[datetime] = None
    sentToFirstName: Optional[str] = None
    sentToLastName: Optional[str] = None
    assessmentType: Optional[str] = None
    status: Optional[Status] = None
    sentBy: Optional[VisoUser] = None
    type: str


class CertificationAssessment(Assessment):
    pass


class RecertificationAssessment(Assessment):
    pass


class ArtifactUpdateAssessment(Assessment):
    pass


class Relationship(BaseModel):
    name: str
    id: Optional[int] = None
    recertificationType: Optional[RecertificationType] = None
    primaryContact: Optional[PrimaryContact] = None
    description: Optional[str] = None
    recertificationDate: Optional[datetime] = None
    residualRisk: Optional[ResidualRisk] = None
    updatedDate: Optional[datetime] = None
    subscribers: Optional[List[VisoUser]] = Field(None, unique_items=True)
    isTransitional: Optional[bool] = None
    assessments: Optional[
        List[
            Union[
                ArtifactUpdateAssessment,
                CertificationAssessment,
                RecertificationAssessment,
            ]
        ]
    ] = Field(None, unique_items=True)
    homepage: Optional[str] = None
    dataTypes: Optional[List[DataType]] = Field(None, unique_items=True)
    contextTypes: Optional[List[ContextType]] = Field(None, unique_items=True)
    potentialRisk: Optional[PotentialRisk] = None
    createdDate: Optional[datetime] = None
    businessOwner: Optional[VisoUser] = None
    status: Optional[Status2] = None
